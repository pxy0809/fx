{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-04-28T02:34:36.150Z",
    "end": "2019-04-28T02:34:36.169Z",
    "duration": 19,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "f9e11909-3033-40c0-b1d1-fbf610d6c59a",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "0e40936b-476b-450c-81bf-85e4555874f1",
        "title": "memoize",
        "fullFile": "F:\\github\\fx\\test\\specs\\function\\memoize.spec.ts",
        "file": "\\test\\specs\\function\\memoize.spec.ts",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "create a function",
            "fullTitle": "memoize create a function",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var add = memoize_1.default(function (x, y) {\n    return x + y;\n});\nchai_1.expect(typeof add).to.equal('function');",
            "err": {},
            "isRoot": false,
            "uuid": "e2b50ca8-2684-4852-9983-cdefed54abb1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "returns value from cache",
            "fullTitle": "memoize returns value from cache",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// use type any to ignore tslint check\nvar add = memoize_1.default(function (x, y) {\n    return x + y;\n});\nchai_1.expect(add(1, 2)).to.equal(3);\nchai_1.expect(add(1, 2)).to.equal(3);\nchai_1.expect(add.cache[1]).to.equal(3);",
            "err": {},
            "isRoot": false,
            "uuid": "7cb48e0f-dbd4-41f7-a588-7ae82c9f8127",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "uses the first parameter as cache key by default",
            "fullTitle": "memoize uses the first parameter as cache key by default",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// use type any to ignore tslint check\nvar add = memoize_1.default(function (x, y) {\n    return x + y;\n});\nchai_1.expect(add(1, 2)).to.equal(3);\nchai_1.expect(add.cache[1]).to.equal(3);",
            "err": {},
            "isRoot": false,
            "uuid": "cfd996f4-8f2d-4e94-a1ee-f43d7e968723",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "sets resolves by function",
            "fullTitle": "memoize sets resolves by function",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var add = memoize_1.default(function (x, y) {\n    return x + y;\n}, function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.join('-');\n});\nchai_1.expect(add(1, 2)).to.equal(3);\nchai_1.expect(add.cache['1-2']).to.equal(3);",
            "err": {},
            "isRoot": false,
            "uuid": "f9211ce1-b830-4195-9ea2-48828844d49a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "e2b50ca8-2684-4852-9983-cdefed54abb1",
          "7cb48e0f-dbd4-41f7-a588-7ae82c9f8127",
          "cfd996f4-8f2d-4e94-a1ee-f43d7e968723",
          "f9211ce1-b830-4195-9ea2-48828844d49a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}